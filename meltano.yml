plugins:
  extractors:
  - config:
      projects: meltano/meltano
      start_date: '2020-05-01'
    label: GitLab
    name: tap-gitlab
    pip_url: git+https://gitlab.com/meltano/tap-gitlab.git
  - label: Salesforce
    name: tap-salesforce
    pip_url: git+https://gitlab.com/meltano/tap-salesforce.git
    select:
    - Contact.*
    - User.*
    - Account.*
    - Opportunity.*
    - OpportunityHistory.*
    - Lead.*
  - capabilities:
    - catalog
    - discover
    - state
    config:
      start_date: '2020-01-01T00:00:00Z'
      user_agent: tap-covid-19 via meltano (https://gitlab.com/meltano/demo-project)
    executable: tap-covid-19
    name: tap-covid-19
    namespace: tap_covid_19
    pip_url: tap-covid-19
    select:
    - eu_daily.cases
    - eu_ecdc_daily.*
    - '!*.git_*'
    - eu_daily.country
    - eu_daily.deaths
    - eu_daily.date
    settings:
    - name: api_token
    - name: user_agent
    - name: start_date
  loaders:
  - label: JSONL
    name: target-jsonl
    pip_url: target-jsonl
  - label: PostgreSQL
    name: target-postgres
    pip_url: git+https://github.com/meltano/target-postgres.git
  - label: Snowflake
    name: target-snowflake
    pip_url: git+https://gitlab.com/meltano/target-snowflake.git
    signup_url: https://trial.snowflake.com?referrer=meltano
  orchestrators:
  - name: airflow
    pip_url: wtforms==2.2.1 apache-airflow==1.10.2
  transformers:
  - name: dbt
    pip_url: dbt==0.14.4
  transforms:
  - name: tap-gitlab
    pip_url: https://gitlab.com/meltano/dbt-tap-gitlab.git
    vars:
      schema: '{{ env_var(''MELTANO_LOAD_SCHEMA'') }}'
      ultimate_license: '{{ env_var(''GITLAB_API_ULTIMATE_LICENSE'', False) }}'
schedules:
- extractor: tap-gitlab
  interval: '@hourly'
  loader: target-jsonl
  name: gitlab-to-jsonl
  start_date: 2020-05-01 00:00:00
  transform: skip
- extractor: tap-gitlab
  interval: '@daily'
  loader: target-postgres
  name: gitlab-to-postgres
  start_date: 2020-05-01 00:00:00
  transform: run
send_anonymous_usage_stats: false
version: 1
